{"version":3,"sources":["conversion/index.js","App.js","index.js"],"names":["convertToBase","text","from","to","split","reverse","map","value","indexOf","reduce","acc","index","Math","pow","getDecimal","toUpperCase","toString","App","useState","result","setResult","fromBase","setFromBase","toBase","setToBase","userInput","setUserInput","handleChangeOption","setValue","event","target","BaseSelect","defaultValue","onChange","CreateCurve","className","id","clipPathUnits","d","rows","onKeyPress","base","validateInput","key","preventDefault","type","onClick","convert","ReactDOM","render","document","getElementById"],"mappings":"yOAOaA,EAAgB,SAAEC,EAAMC,EAAMC,GAAd,OAJV,SAACF,EAAMC,GAAP,OAAgBD,EAAKG,MAAM,IAAIC,UAChDC,KAAK,SAAAC,GAAK,MAHM,mBAGQC,QAAQD,MAChCE,QAAQ,SAACC,EAAKH,EAAOI,GAAb,OAAwBD,EAAME,KAAKC,IAAKX,EAAMS,GAAUJ,IAAO,GAGxEO,CAAYb,EAAKc,cAAcb,GAC7Bc,SAASb,GAAIY,e,WCyEDE,MA5Ef,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACLC,EADK,KACGC,EADH,OAEqBF,mBAAS,GAF9B,mBAELG,EAFK,KAEKC,EAFL,OAGiBJ,mBAAS,IAH1B,mBAGLK,EAHK,KAGGC,EAHH,OAIuBN,mBAAS,IAJhC,mBAILO,EAJK,KAIMC,EAJN,KAiBPC,EAAqB,SAAAC,GAAQ,OAAI,SAAAC,GACrCH,EAAa,IACbE,EAAUC,EAAMC,OAAOvB,SAGnBwB,EAAa,SAAC,GAAD,IAAGxB,EAAH,EAAGA,MAAOqB,EAAV,EAAUA,SAAV,OACjB,4BACEI,aAAczB,EACd0B,SAAUN,EAAmBC,IAE7B,4BAAQrB,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,aACA,4BAAQA,MAAO,IAAf,WACA,4BAAQA,MAAO,IAAf,iBAIE2B,EAAc,kBAClB,yBAAKC,UAAU,SACb,8BACE,8BAAUC,GAAG,QAAQC,cAAc,qBACjC,0BAAMC,EAAE,gGAMhB,OAAQ,oCACN,kBAACJ,EAAD,MAEA,wBAAIC,UAAU,SAAd,yBACA,6BAASA,UAAU,aACjB,8BAEE,6BAASA,UAAU,OACjB,kBAACJ,EAAD,CAAYxB,MAAOc,EAAUO,SAAUN,IACvC,sCACA,kBAACS,EAAD,CAAYxB,MAAOgB,EAAQK,SAAUJ,KAGvC,8BACEe,KAAM,EACNhC,MAAOkB,EACPQ,SAAW,SAAAJ,GAAK,OAAIH,EAAcG,EAAMC,OAAOvB,QAC/CiC,WAvDR,SAAmCX,IDD9B,SAAyB5B,EAAMwC,GACrC,IAAM9B,EAXW,mBAWOH,QAAQP,EAAKc,eACrC,OAAOJ,EAAQ8B,GAAQ9B,GAAS,GCAT+B,CAAcb,EAAMc,IAAKtB,IAE3CQ,EAAMe,oBAuDJ,2BAAIzB,GAEJ,2BACE0B,KAAK,SACLtC,MAAM,UACNuC,QAzDR,WACE,IAAMC,EAAU/C,EAAeyB,EAAWJ,EAAUE,GACpDH,EAAU2B,UChBdC,IAASC,OAAQ,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b4699a92.chunk.js","sourcesContent":["\r\nconst permitted = '0123456789ABCDEF'\r\n\r\nconst getDecimal = (text, from) => text.split('').reverse()\r\n\t.map( value => permitted.indexOf(value) )\r\n\t.reduce( (acc, value, index ) => acc + Math.pow( from, index ) * value, 0)\r\n\r\nexport const convertToBase = ( text, from, to ) =>\r\n\tgetDecimal( text.toUpperCase(),from)\r\n\t\t.toString(to).toUpperCase()\r\n\r\nexport function validateInput ( text, base ) {\r\n\tconst index = permitted.indexOf(text.toUpperCase())\r\n\treturn index < base && index >= 0\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { validateInput, convertToBase } from './conversion'\r\n\r\nimport './global.css'\r\nimport './responsive.css'\r\n\r\nfunction App() {\r\n  const [ result, setResult ] = useState('')\r\n  const [ fromBase, setFromBase ] = useState(2)\r\n  const [ toBase, setToBase ] = useState(10)\r\n  const [ userInput, setUserInput ] = useState('')\r\n\r\n  function handleValidateUserInput ( event ) {\r\n    const isPermitted = validateInput(event.key, fromBase)\r\n    if(!isPermitted)\r\n      event.preventDefault()\r\n  }\r\n\r\n  function handleConversion () {\r\n    const convert = convertToBase( userInput, fromBase, toBase )\r\n    setResult(convert)\r\n  }\r\n\r\n  const handleChangeOption = setValue => event => {\r\n    setUserInput('')\r\n    setValue( event.target.value )\r\n  }\r\n\r\n  const BaseSelect = ({ value, setValue }) => (\r\n    <select \r\n      defaultValue={value}\r\n      onChange={handleChangeOption(setValue)} \r\n    >\r\n      <option value={2} >Binário</option>\r\n      <option value={8} >Octagonal</option>\r\n      <option value={10} >Decimal</option>\r\n      <option value={16} >Hexadecimal</option>\r\n    </select>\r\n  )\r\n\r\n  const CreateCurve = () => (\r\n    <svg className='curve'>\r\n      <defs>\r\n        <clipPath id='curve' clipPathUnits=\"objectBoundingBox\" >\r\n          <path d='M 1 0 L 0 0 L 0 0.5 Q .15 .45 .3 .475 Q .45 .5 .55 .475 Q .7 .45 .8 .475 Q .9 .5 1 .5 Z' />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  )\r\n\r\n  return (<>\r\n    <CreateCurve />\r\n\r\n    <h1 className='title'>Conversão de bases</h1>\r\n    <section className='container' >\r\n      <form>\r\n\r\n        <section className='row'>\r\n          <BaseSelect value={fromBase} setValue={setFromBase} />\r\n          <span>PARA</span>\r\n          <BaseSelect value={toBase} setValue={setToBase} />\r\n        </section> \r\n\r\n        <textarea \r\n          rows={5}\r\n          value={userInput}\r\n          onChange={ event => setUserInput( event.target.value ) } \r\n          onKeyPress={ handleValidateUserInput }\r\n        ></textarea>\r\n        \r\n        <p>{result}</p>\r\n        \r\n        <input \r\n          type='button' \r\n          value='convert' \r\n          onClick={handleConversion} \r\n        />  \r\n      </form>\r\n    </section>\r\n  </>)\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App';\r\n\r\nReactDOM.render( <App />, document.getElementById('root') );\r\n"],"sourceRoot":""}